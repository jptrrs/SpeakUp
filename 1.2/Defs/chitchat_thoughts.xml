<?xml version="1.0" encoding="utf-8"?>
<Defs>
	<InteractionDef ParentName="SpeakUpReply"><!-- ===starving — eating === -->
		<defName>StarvingEating</defName>
		<label>starving — eating</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->[bad_opinion]</li>
					<li>bad_opinion(INITIATOR_opinion&lt;=25)->Hope you choke on it, [RECIPIENT_nameDef]!</li>
					<li>bad_opinion->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->Enjoy, [RECIPIENT_nameDef]!</li>
					<li>good_opinion(INITIATOR_social_level>=5)->Bon appétit, [RECIPIENT_nameDef]!</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>

	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_ApparelDamaged</defName>
		<label>apparel — damaged</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->I'm sorry to hear that, [RECIPIENT_nameDef]. [comment]</li>
					<li>comment-></li>
					<li>comment(INITIATOR_crafting_level>=5)->I could try and make some new apparel for you.</li>
					<li>comment(INITIATOR_social_level>=5)->I'll try to trade in something in exchange for some new apparel for you.</li>
					<li>comment(INITIATOR_thoughtDefName==ApparelDamaged)->Mine is in no good shape either...</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	
	<InteractionDef ParentName="SpeakUpReply"><!-- ===ate wo table (stressed or abrasive) === -->
		<defName>ReactToThought_AteWithoutTable</defName>
		<label>react to — ate wo table (stressed or abrasive)</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->[bad_opinion]</li>
					<!-- ===Initiator is not skilled in construction=== -->
						<li>bad_opinion(INITIATOR_construction_level&lt;4)->[bad_opinion_unskilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>bad_opinion_unskilled(RECIPIENT_construction_level&lt;4)->...</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>bad_opinion_unskilled(RECIPIENT_construction_level>=4)->Yes you could have, [RECIPIENT_nameDef] — now, try to be more useful in the future!</li>
					<!-- ===Initiator is skilled in construction=== -->
						<li>bad_opinion(INITIATOR_construction_level>=4)->[bad_opinion_skilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>bad_opinion_skilled(RECIPIENT_construction_level&lt;4)->And I hope you [shut_up], [RECIPIENT_nameDef].</li>
								<li>shut_up->shut up</li>
								<li>shut_up->stop nagging me</li>
								<li>shut_up->stop bothering me</li>
								<li>shut_up->just shut up</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>bad_opinion_skilled(RECIPIENT_construction_level>=4)->Hey, [RECIPIENT_nameDef] — you need a table, you build one yourself. I've got more important things to do.</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===Initiator is not skilled in construction=== -->
						<li>good_opinion(INITIATOR_construction_level&lt;4)->[good_opinion_unskilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>good_opinion_unskilled(RECIPIENT_construction_level&lt;4)->Let's hope it won't happen again, [RECIPIENT_nameDef] — it's [annoying].</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>good_opinion_unskilled(RECIPIENT_construction_level>=4)->Don't worry, [RECIPIENT_nameDef] — I'm sure you won't let this happen again.</li>
					<!-- ===Initiator is skilled in construction=== -->
						<li>good_opinion(INITIATOR_construction_level>=4)->[good_opinion_skilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>good_opinion_skilled(RECIPIENT_construction_level&lt;4)->I had planned to build one, but I got distracted. Sorry, [RECIPIENT_nameDef] — it won't happen again.</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>good_opinion_skilled(RECIPIENT_construction_level>=4)->You're right [RECIPIENT_nameDef] — we could have built one. We won't let this happen again.</li>
				<!-- ===WILDCARDS=== -->
					<li>annoying->bad</li>
					<li>annoying->irritating</li>
					<li>annoying->infuriating</li>
					<li>annoying->maddening</li>
					<li>annoying->bothersome</li>
					<li>annoying->unacceptable</li>
					<li>annoying->not nice</li>
					<li>annoying->unpleasant</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	
	<InteractionDef ParentName="SpeakUpReply"><!-- ===ate meal === -->
		<defName>ReactToThought_AteMeal</defName>
		<label>ate meal</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===Recipient ate lavish=== -->
						<li>good_opinion(RECIPIENT_thoughtDefName==AteLavishMeal)->[recipient_lavish]</li>
						<li>recipient_lavish(INITIATOR_thoughtDefName==AteLavishMeal,priority=1)->Me too! [medical_opinion_lavish_1]</li>
						<li>recipient_lavish(INITIATOR_thoughtDefName==AteFineMeal,priority=1)->I don't think they're as abundant as you say, but I agree with you! [medical_opinion_lavish_1]</li>
						<li>recipient_lavish->Really? Mine were plain and ordinary. [medical_opinion_lavish_2]</li>
						<li>recipient_lavish->Really? Mine were plain plain and ordinary. [cook_opinion]</li>
						<li>recipient_lavish(INITIATOR_thoughtDefName==AteAwfulMeal,priority=1)->What?! I had to eat some disgusting food earlier! [medical_opinion_lavish_2]</li>
						<li>recipient_lavish(INITIATOR_thoughtDefName==AteAwfulMeal,priority=1)->What?! I had to eat some disgusting food earlier! [cook_opinion]</li>
						<li>recipient_lavish(INITIATOR_thoughtDefName==AteRawFood,priority=1)->What?! I had to eat some raw food earlier! [medical_opinion_lavish_2]</li>
						<li>recipient_lavish(INITIATOR_thoughtDefName==AteRawFood,priority=1)->What?! I had to eat some raw food earlier! [cook_opinion]</li>
						<li>recipient_lavish(INITIATOR_thoughtDefName==AteKibble,priority=1)->What?! I had to eat some kibble earlier! [medical_opinion_lavish_2]</li>
						<li>recipient_lavish(INITIATOR_thoughtDefName==AteKibble,priority=1)->What?! I had to eat some kibble earlier! [cook_opinion]</li>
						<li>recipient_lavish(INITIATOR_thoughtDefName==AteCorpse,priority=1)->Are you kidding me?! I had to eat some unbutchered corpse earlier! That was horrible!</li>
					<!-- ===Recipient ate fine=== -->
						<li>good_opinion(RECIPIENT_thoughtDefName==AteFineMeal)->[recipient_fine]</li>
						<li>recipient_fine(INITIATOR_thoughtDefName==AteLavishMeal,priority=1)->And abundant, too! [medical_opinion_fine_1]</li>
						<li>recipient_fine(INITIATOR_thoughtDefName==AteFineMeal,priority=1)->Me too! [medical_opinion_fine_1]</li>
						<li>recipient_fine->Really? I found them plain and ordinary. [medical_opinion_fine_2]</li>
						<li>recipient_fine->Really? I found them plain and ordinary. [cook_opinion]</li>
						<li>recipient_fine(INITIATOR_thoughtDefName==AteAwfulMeal,priority=1)->What?! I had to eat some disgusting food earlier! [medical_opinion_fine_2]</li>
						<li>recipient_fine(INITIATOR_thoughtDefName==AteAwfulMeal,priority=1)->What?! I had to eat some disgusting food earlier! [cook_opinion]</li>
						<li>recipient_fine(INITIATOR_thoughtDefName==AteRawFood,priority=1)->What?! I had to eat some raw food earlier! [medical_opinion_fine_2]</li>
						<li>recipient_fine(INITIATOR_thoughtDefName==AteRawFood,priority=1)->What?! I had to eat some raw food earlier! [cook_opinion]</li>
						<li>recipient_fine(INITIATOR_thoughtDefName==AteKibble,priority=1)->What?! I had to eat some kibble earlier! [medical_opinion_fine_2]</li>
						<li>recipient_fine(INITIATOR_thoughtDefName==AteKibble,priority=1)->What?! I had to eat some kibble earlier! [cook_opinion]</li>
						<li>recipient_fine(INITIATOR_thoughtDefName==AteCorpse,priority=1)->Are you kidding me?! I had to eat some unbutchered corpse earlier! That was horrible!</li>
					<!-- ===Recipient ate awful=== -->
						<li>good_opinion(RECIPIENT_thoughtDefName==AteAwfulMeal)->[recipient_awful]</li>
						<li>recipient_awful(INITIATOR_thoughtDefName==AteLavishMeal,priority=1)->I'm sorry to hear that, [RECIPIENT_nameDef]. [cooking_offer]</li>
						<li>recipient_awful(INITIATOR_thoughtDefName==AteFineMeal,priority=1)->I'm sorry to hear that, [RECIPIENT_nameDef]. [cooking_offer]</li>
						<li>recipient_awful->I'm sorry to hear that, [RECIPIENT_nameDef]. [cooking_offer]</li>
						<li>recipient_awful(INITIATOR_thoughtDefName==AteAwfulMeal,priority=1)->Me too! [cook_opinion]</li>
						<li>recipient_awful(INITIATOR_thoughtDefName==AteRawFood,priority=1)->Lucky you — I had to eat some raw food earlier! [cook_opinion]</li>
						<li>recipient_awful(INITIATOR_thoughtDefName==AteKibble,priority=1)->Lucky you — I had to eat some kibble earlier! [cook_opinion]</li>
						<li>recipient_awful(INITIATOR_thoughtDefName==AteCorpse,priority=1)->And I had to eat some unbutchered corpse earlier! That was horrible!</li>
					<!-- ===Recipient ate raw=== -->
						<li>good_opinion(RECIPIENT_thoughtDefName==AteRawFood)->[recipient_raw] [medical_opinion_raw]</li>
						<li>recipient_raw(INITIATOR_thoughtDefName==AteLavishMeal,priority=1)->I'm so sorry to hear that, [RECIPIENT_nameDef]! [cooking_offer]</li>
						<li>recipient_raw(INITIATOR_thoughtDefName==AteFineMeal,priority=1)->I'm so sorry to hear that, [RECIPIENT_nameDef]! [cooking_offer]</li>
						<li>recipient_raw->I'm sorry to hear that, [RECIPIENT_nameDef]! [cooking_offer]</li>
						<li>recipient_raw(INITIATOR_thoughtDefName==AteAwfulMeal,priority=1)->I'm sorry to hear that, [RECIPIENT_nameDef]! [cooking_offer]</li>
						<li>recipient_raw(INITIATOR_thoughtDefName==AteRawFood,priority=1)->Me too! [cook_opinion]</li>
						<li>recipient_raw(INITIATOR_thoughtDefName==AteKibble,priority=1)->Lucky you — I had to eat some kibble earlier! [cook_opinion]</li>
						<li>recipient_raw(INITIATOR_thoughtDefName==AteCorpse,priority=1)->And I had to eat some unbutchered corpse earlier! That was horrible!</li>
					<!-- ===Recipient ate kibble=== -->
						<li>good_opinion(RECIPIENT_thoughtDefName==AteKibble)->[recipient_kibble]</li>
						<li>recipient_kibble(INITIATOR_thoughtDefName==AteLavishMeal,priority=1)->I'm so sorry to hear that, [RECIPIENT_nameDef]! [cooking_offer]</li>
						<li>recipient_kibble(INITIATOR_thoughtDefName==AteFineMeal,priority=1)->I'm so sorry to hear that, [RECIPIENT_nameDef]! [cooking_offer]</li>
						<li>recipient_kibble->I'm sorry to hear that, [RECIPIENT_nameDef]! [cooking_offer]</li>
						<li>recipient_kibble(INITIATOR_thoughtDefName==AteAwfulMeal,priority=1)->I'm sorry to hear that, [RECIPIENT_nameDef]! [cooking_offer]</li>
						<li>recipient_kibble(INITIATOR_thoughtDefName==AteRawFood,priority=1)->I'm sorry to hear that, [RECIPIENT_nameDef]! [cooking_offer]</li>
						<li>recipient_kibble(INITIATOR_thoughtDefName==AteKibble,priority=1)->Me too! [cook_opinion]</li>
						<li>recipient_kibble(INITIATOR_thoughtDefName==AteCorpse,priority=1)->And I had to eat some unbutchered corpse earlier! That was horrible!</li>
					<!-- ===Recipient ate corpse=== -->
						<li>good_opinion(RECIPIENT_thoughtDefName==AteCorpse)->[recipient_corpse] [medical_opinion_corpse]</li>
						<li>recipient_corpse(INITIATOR_thoughtDefName==AteLavishMeal,priority=1)->That's disgusting and gross, [RECIPIENT_nameDef]! I hope I won't ever come to that!</li>
						<li>recipient_corpse(INITIATOR_thoughtDefName==AteFineMeal,priority=1)->That's disgusting and gross, [RECIPIENT_nameDef]! I hope I won't ever come to that!</li>
						<li>recipient_corpse->That's disgusting and gross, [RECIPIENT_nameDef]! I hope I won't ever come to that!</li>
						<li>recipient_corpse(INITIATOR_thoughtDefName==AteAwfulMeal,priority=1)->That's disgusting and gross, [RECIPIENT_nameDef]! I hope I won't ever come to that!</li>
						<li>recipient_corpse(INITIATOR_thoughtDefName==AteRawFood,priority=1)->That's disgusting and gross, [RECIPIENT_nameDef]! I hope I won't ever come to that!</li>
						<li>recipient_corpse(INITIATOR_thoughtDefName==AteKibble,priority=1)->That's disgusting and gross, [RECIPIENT_nameDef]! I hope I won't ever come to that!</li>
						<li>recipient_corpse(INITIATOR_thoughtDefName==AteCorpse,priority=1)->Me too! That was horrible! Oh my, what have we come to?!</li>
				<!-- ===WILDCARDS=== -->
					<li>medical_opinion_lavish_1-></li>
					<li>medical_opinion_lavish_1(INITIATOR_medical_level>=5,priority=1)->[although] I think it'd be healthier to eat less lavishly.</li>
					<li>medical_opinion_lavish_2-></li>
					<li>medical_opinion_lavish_2(INITIATOR_medical_level>=5,priority=1)->[moreover] I think you'd be healthier if you ate less lavishly.</li>
					<li>medical_opinion_fine_1-></li>
					<li>medical_opinion_fine_1(INITIATOR_medical_level>=5,priority=1)->[moreover] our well-balanced, varied diet is excellent for our health.</li>
					<li>medical_opinion_fine_2-></li>
					<li>medical_opinion_fine_2(INITIATOR_medical_level>=5,priority=1)->At least, you're lucky enough to have a well-balanced diet — excellent for your health.</li>
					<li>medical_opinion_raw-></li>
					<li>medical_opinion_raw(INITIATOR_medical_level>=5,priority=1)->[moreover] eating raw food is dangerous for your health!</li>
					<li>medical_opinion_corpse-></li>
					<li>medical_opinion_corpse(INITIATOR_medical_level>=5,priority=1)->[moreover] it's highly dangerous for your health!</li>
					<li>cooking_offer(INITIATOR_cooking_level&lt;6)-></li>
					<li>cooking_offer(INITIATOR_cooking_level>=6)->I'll try and cook something better for you.</li>
					<li>cook_opinion(INITIATOR_cooking_level&lt;6)->If only I were a better cook...</li>
					<li>cook_opinion(INITIATOR_cooking_level>=6)->I could cook some better meals!</li>
					<li>although->Although,</li>
					<li>although->Yet,</li>
					<li>although->Nonetheless,</li>
					<li>although->Even so,</li>
					<li>moreover->Moreover, </li>
					<li>moreover->Besides, </li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>	
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_DiningRoom</defName>
		<label>room — dining</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion(INITIATOR_thoughtDefName==AteInImpressiveDiningRoom,priority=2)->Same here, [RECIPIENT_nameDef]! [comment]</li>
					<li>good_opinion(INITIATOR_thoughtDefName==AteWithoutTable,priority=1)->Really, [RECIPIENT_nameDef]!? Where is this dining room you speak of? [comment]</li>
					<li>good_opinion->That's nice to hear, [RECIPIENT_nameDef]! [comment]</li>
				<!-- ===WILDCARDS=== -->
					<li>comment-></li>
					<li>comment(INITIATOR_trait==gourmand)->I look forward to enjoying many fancy meals there!</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_DefeatedMechCluster</defName>
		<label>defeated cluster</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion(INITIATOR_trait==body purist,priority=1)->A victory that clearly shows that our human bodies need no cybernetics — they're just perfect the way they are!</li>
					<li>good_opinion->It was indeed! [comment]</li>
					<li>comment-></li>
					<li>comment(INITIATOR_trait==brawler)->We squashed those mechs like bugs!</li>
					<li>comment(INITIATOR_trait==depressive)->A great, hollow victory — for when they come back with heavier forces, we will get mercilessly destroyed.</li>
					<li>comment(INITIATOR_trait==hard worker)->But now, we'd better prepare for the next mech attack.</li>
					<li>comment(INITIATOR_trait==industrious)->But now, we'd better prepare for the next mech attack.</li>
					<li>comment(INITIATOR_trait==optimist)->I'm sure those things won't come back anytime soon — we're safe!</li>
					<li>comment(INITIATOR_trait==pessimist)->But I'm sure those things will come back soon with heavier forces.</li>
					<li>comment(INITIATOR_trait==sanguine)->And this is only one of the many victories awaiting us!</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>	
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_EnvironmentCold</defName>
		<label>environment — cold</label>
		<logRulesInitiator>
			<rulesStrings>
				<li>r_logentry(INITIATOR_trait==too smart)->We'll all freeze someday, as per universe heat death theory. Our long-derived and processed molecules would survive, but that's hardly what defines our higher functions.</li>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
					<li>r_logentry(INITIATOR_opinion&lt;0)->Good — for I hope you freeze to death, [RECIPIENT_nameDef]!</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===Feeling cold=== -->
						<li>good_opinion(INITIATOR_thoughtDefName==EnvironmentCold,priority=1)->[feeling_cold]</li>
						<li>feeling_cold(INITIATOR_thoughtLabel==chilly)->You're right, [RECIPIENT_nameDef]. I'm uncomfortably cold myself.</li>
						<li>feeling_cold(INITIATOR_thoughtLabel==cold)->I'm shivering myself, [RECIPIENT_nameDef].</li>
						<li>feeling_cold(INITIATOR_thoughtLabel==numbing cold)->All I can think of is getting warm, [RECIPIENT_nameDef].</li>
						<li>feeling_cold(INITIATOR_thoughtLabel==absolutely freezing)->I can't feel my toes and fingers. I urgently need to get warm.</li>
					<!-- ===Not feeling cold=== -->
						<li>good_opinion->I'm sorry to hear that, [RECIPIENT_nameDef]. [comment]</li>
				
				<!-- ===WILDCARDS === -->
					<li>comment-></li>
					<li>comment(INITIATOR_social_level>=5)->I'll try to trade in something in exchange for some warmer clothing for you.</li>
					<li>comment(INITIATOR_crafting_level>=5)->I could try and make some warmer clothing for you.</li>
					<li>comment(INITIATOR_medical_level>=5)->We must find a way to get you warm — or you might even get a nasty frostbite.</li>
					<li>comment(INITIATOR_cooking_level>=5)->I'll try to prepare a nice, hot meal to warm you up.</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_EnvironmentDark</defName>
		<label>environment — dark</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->Be careful, [RECIPIENT_nameDef] — [watch_your_step].</li>
				<!-- ===Undergrounder=== -->
					<li>good_opinion(INITIATOR_trait==undergrounder,priority=1)->[undergrounder]</li>
					<li>undergrounder->Really, [RECIPIENT_nameDef]? I'm not bothered by darkness.</li>
					<li>undergrounder(RECIPIENT_trait==undergrounder,priority=1)->I feel the same, [RECIPIENT_nameDef].</li>
				<!-- ===Night owl=== -->	
					<li>good_opinion(INITIATOR_trait==night owl,priority=1)->[night_owl]</li>
					<li>night_owl->Really, [RECIPIENT_nameDef]? I see darkness as a chance to relax.</li>
					<li>night_owl(RECIPIENT_trait==night owl,priority=1)->I feel the same, [RECIPIENT_nameDef].</li>
				<!-- ===Mood === -->
					<li>good_opinion(INITIATOR_mood&lt;0.5)->How are we [supposed] to get things done in this darkness?</li>
				<!-- ===WILDCARDS=== -->	
					<li>watch_your_step->watch your step</li>
					<li>watch_your_step->tread carefully</li>
					<li>watch_your_step->step carefully</li>				
					<li>supposed->supposed</li>
					<li>supposed->expected</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_EnvironmentHot</defName>
		<label>environment — hot</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===Feeling hot=== -->
						<li>good_opinion(INITIATOR_thoughtDefName==EnvironmentHot,priority=1)->[feeling_hot]</li>
						<li>feeling_hot(INITIATOR_thoughtLabel==sweaty)->You're right, [RECIPIENT_nameDef]. I'm sweating.</li>
						<li>feeling_hot(INITIATOR_thoughtLabel==hot)->Ah, [RECIPIENT_nameDef] — if only I could have a breath of cool air...</li>
						<li>feeling_hot(INITIATOR_thoughtLabel==sweltering hot)->I'm not sure how long I can handle this extreme heat, [RECIPIENT_nameDef].</li>
						<li>feeling_hot(INITIATOR_thoughtLabel==blistering hot)->This is worse than Hell itself. The air itself is on fire!</li>
					<!-- ===Not feeling hot=== -->
						<li>good_opinion->I'm sorry to hear that, [RECIPIENT_nameDef]. [comment]</li>
				<!-- ===WILDCARDS === -->
					<li>comment-></li>
					<li>comment(INITIATOR_social_level>=5)->I'll try to trade in something in exchange for some cooler clothing for you.</li>
					<li>comment(INITIATOR_crafting_level>=5)->I could try and make some cooler clothing for you.</li>
					<li>comment(INITIATOR_medical_level>=5)->We must find a way to cool you down — or you might even get a nasty heatstroke.</li>
					<li>comment(INITIATOR_cooking_level>=5)->I'll try to prepare a nice, cold meal to cool you down.</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_ExSlave</defName>
		<label>freed from slavery</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->You should be thankful indeed, [RECIPIENT_nameDef]. Let's hope rescuing you was worth our while!</li>
					<li>r_logentry(INITIATOR_opinion&lt;0)->Sometimes I think that we would've been better off leaving you to those slavers...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->No problem, [RECIPIENT_nameDef]. It was the right thing to do.</li>
					<li>good_opinion(INITIATOR_trait==kind)->You really don't need to thank us — we just did our duty as good human beings.</li>
					<li>good_opinion(INITIATOR_trait==psychopath,priority=1)->...</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>	
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_JoyRoom</defName>
		<label>rec room</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===Good rec room=== -->
						<li>good_opinion(INITIATOR_thoughtDefName==JoyActivityInImpressiveRecRoom,priority=1)->[rec_room]</li>
						<li>rec_room(INITIATOR_thoughtLabel==decent rec room)->Yes, [RECIPIENT_nameDef].</li>
						<li>rec_room(INITIATOR_thoughtLabel==slightly impressive rec room)->I believe it's enjoyable, [RECIPIENT_nameDef]!</li>
						<li>rec_room(INITIATOR_thoughtLabel==somewhat impressive rec room)->I believe it's very enjoyable, [RECIPIENT_nameDef]! [comment2]</li>
						<li>rec_room(INITIATOR_thoughtLabel==very impressive rec room)->I have loads of fun in it, [RECIPIENT_nameDef]! [comment2]</li>
						<li>rec_room(INITIATOR_thoughtLabel==extremely impressive rec room)->I truly have loads of fun in it, [RECIPIENT_nameDef]! [comment2]</li>
						<li>rec_room(INITIATOR_thoughtLabel==unbelievably impressive rec room)->It's the coolest ever, [RECIPIENT_nameDef]! [comment2]</li>
						<li>rec_room(INITIATOR_thoughtLabel==wondrously impressive rec room)->It's a complete Paradise, [RECIPIENT_nameDef] — all decked for maxxing out anyone's fun! [comment2]</li>
					<!-- ===recreation satisfied === -->
						<li>good_opinion(INITIATOR_thoughtLabel==recreation satisfied,priority=1)->I think we have several nice entertainment options around here.</li>
					<!-- ===recreation fully satisfied === -->
						<li>good_opinion(INITIATOR_thoughtLabel==recreation fully satisfied,priority=1)->I think we have lots of excellent entertainment options around here!</li>
					<!-- ===Absent or bad rec room=== -->
						<li>good_opinion->What rec room, [RECIPIENT_nameDef]? [comment]</li>
				<!-- ===WILDCARDS === -->
					<li>comment->I can't seem to have any fun around here...</li>
					<li>comment(INITIATOR_social_level>=5)->If we want to host parties, we need to do much better than what we have now.</li>
					<li>comment(INITIATOR_construction_level>=5)->I'd better take care of it myself, if we really want to have one.</li>
					<li>comment2-></li>
					<li>comment2(INITIATOR_social_level>=5)->And it'll be excellent for hosting our next party!</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>		

	<InteractionDef ParentName="SpeakUpReply"><!-- ===prisoner sold === -->
		<defName>ReactToThought_PrisonerSold</defName>
		<label>prisoner sold</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->I agree, [RECIPIENT_nameDef]!</li>
					<!-- ===Initiator is Kind=== -->
						<li>good_opinion(INITIATOR_trait==kind,priority=1)->[i_kind]</li>
						<li>i_kind->Slavery is awful, [RECIPIENT_nameDef]! Nobody deserves that fate!</li>
						<li>i_kind(RECIPIENT_trait==kind,priority=2)->I fully agree, [RECIPIENT_nameDef]! Mean and debasing!</li>
						<li>i_kind(RECIPIENT_trait==bloodlust,priority=1)->[i_kind_r_canniblood]</li>
						<li>i_kind(RECIPIENT_trait==cannibal,priority=1)->[i_kind_r_canniblood]</li>
						<li>i_kind_r_canniblood->That's just so wrong, [RECIPIENT_nameDef]! I totally disagree!</li>
					<!-- ===Initiator is Cannibal or Bloodlusty=== -->
						<li>good_opinion(INITIATOR_trait==cannibal,priority=1)->[i_canniblood]</li>
						<li>good_opinion(INITIATOR_trait==bloodlust,priority=1)->[i_canniblood]</li>
						<li>i_canniblood->Those lucky slavers will get all the fun...</li>
						<li>i_canniblood(RECIPIENT_trait==bloodlust,priority=1)->[i_canniblood_r_canniblood]</li>
						<li>i_canniblood(RECIPIENT_trait==cannibal,priority=1)->[i_canniblood_r_canniblood]</li>
						<li>i_canniblood_r_canniblood->Right! We could've used'em as a punching bag!</li>
						<li>i_canniblood_r_canniblood->Right! We could've tortured'em for fun!</li>
						<li>i_canniblood_r_canniblood->Right! We could've tortured'em to squeeze out some useful intelligence!</li>
						<li>i_canniblood_r_canniblood->Right! We could've skinned'em — a just punishment!</li>
						<li>i_canniblood_r_canniblood(INITIATOR_trait==greedy)->Right! We could've took out their lungs and heart to sell for lots of silver!</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	
<!-- ===START of Need — Beauty=== -->
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_NeedBeauty_hideous</defName>
		<label>need — beauty — react to hideous</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
						<li>good_opinion(INITIATOR_thoughtLabel==hideous environment,priority=1)->That's extremely [annoying], [RECIPIENT_nameDef] — I certainly agree with you.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==ugly environment,priority=1)->That's [annoying], [RECIPIENT_nameDef] — I agree with you.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==unsightly environment,priority=1)->I don't think it's so bad as you say, but... yes this place could look better, [RECIPIENT_nameDef]!</li>
						<li>good_opinion->I can't say you're right, [RECIPIENT_nameDef] — but, for sure, this place could look better.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==pretty environment,priority=1)->Come on, [RECIPIENT_nameDef]! OK, it could be improved — but I actually find it pretty.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==beautiful environment,priority=1)->Are you sure, [RECIPIENT_nameDef]? I don't agree — I actually find it beautiful!</li>
						<li>good_opinion(INITIATOR_thoughtLabel==gorgeous environment,priority=1)->What!? Where have you been, [RECIPIENT_nameDef], to speak like that?! I believe we're in a wonderful place!</li>
				<!-- ===WILDCARDS=== -->
					<li>annoying->bad</li>
					<li>annoying->irritating</li>
					<li>annoying->infuriating</li>
					<li>annoying->maddening</li>
					<li>annoying->bothersome</li>
					<li>annoying->unacceptable</li>
					<li>annoying(INITIATOR_intellectual_level>=5)->unseemly</li>
					<li>annoying(INITIATOR_intellectual_level>=5)->displeasing</li>
					<li>annoying(INITIATOR_intellectual_level>=10)->inadmissible</li>				
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">	
		<defName>ReactToThought_NeedBeauty_ugly</defName>
		<label>need — beauty — react to ugly</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
						<li>good_opinion(INITIATOR_thoughtLabel==hideous environment,priority=1)->This place is not [ugly] — it's worse than that, [RECIPIENT_nameDef]!</li>
						<li>good_opinion(INITIATOR_thoughtLabel==ugly environment,priority=1)->That's exactly what I think, [RECIPIENT_nameDef]!</li>
						<li>good_opinion(INITIATOR_thoughtLabel==unsightly environment,priority=1)->I don't think it's so [ugly] as you say, but... yes this place could look better, [RECIPIENT_nameDef]!</li>
						<li>good_opinion->I can't say you're right, [RECIPIENT_nameDef] — but, for sure, this place could look better.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==pretty environment,priority=1)->Come on, [RECIPIENT_nameDef]! OK, it could be improved — but I actually find it pretty.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==beautiful environment,priority=1)->Are you sure, [RECIPIENT_nameDef]? I don't agree — I actually find it beautiful!</li>
						<li>good_opinion(INITIATOR_thoughtLabel==gorgeous environment,priority=1)->What!? Where have you been, [RECIPIENT_nameDef], to speak like that?! I believe we're in a wonderful place!</li>
				<!-- ===WILDCARDS=== -->
					<li>ugly->bad</li>
					<li>ugly->unsightly</li>
					<li>ugly->unattractive</li>
					<li>ugly->horrible</li>
					<li>ugly->frightful</li>
					<li>ugly->awful</li>
					<li>ugly(INITIATOR_intellectual_level>=5)->ghastly</li>
					<li>ugly(INITIATOR_intellectual_level>=5)->foul</li>
					<li>ugly(INITIATOR_intellectual_level>=10)->repugnant</li>
					<li>ugly(INITIATOR_intellectual_level>=10)->unprepossessing</li>
			</rulesStrings>
		</logRulesInitiator>		
	</InteractionDef>	
	<InteractionDef ParentName="SpeakUpReply">	
		<defName>ReactToThought_NeedBeauty_unsightly</defName>
		<label>need — beauty — react to unsightly</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
						<li>good_opinion(INITIATOR_thoughtLabel==hideous environment,priority=1)->This place is not [ugly] — it's a lot worse than that, [RECIPIENT_nameDef]!</li>
						<li>good_opinion(INITIATOR_thoughtLabel==ugly environment,priority=1)->Probably you're right, [RECIPIENT_nameDef] — but I think it's even worse than that.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==unsightly environment,priority=1)->That's exactly what I think, [RECIPIENT_nameDef]!</li>
						<li>good_opinion->I can't say you're right, [RECIPIENT_nameDef] — but, for sure, this place could look better.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==pretty environment,priority=1)->Come on, [RECIPIENT_nameDef]! OK, it could be improved — but I actually find it pretty.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==beautiful environment,priority=1)->Are you sure, [RECIPIENT_nameDef]? I don't agree — I actually find it beautiful!</li>
						<li>good_opinion(INITIATOR_thoughtLabel==gorgeous environment,priority=1)->What!? Where have you been, [RECIPIENT_nameDef], to speak like that?! I believe we're in a wonderful place!</li>
				<!-- ===WILDCARDS=== -->
					<li>ugly->bad</li>
					<li>ugly->unsightly</li>
					<li>ugly->unattractive</li>
					<li>ugly->horrible</li>
					<li>ugly->frightful</li>
					<li>ugly->awful</li>
					<li>ugly(INITIATOR_intellectual_level>=5)->ghastly</li>
					<li>ugly(INITIATOR_intellectual_level>=5)->foul</li>
					<li>ugly(INITIATOR_intellectual_level>=10)->repugnant</li>
					<li>ugly(INITIATOR_intellectual_level>=10)->unprepossessing</li>
			</rulesStrings>
		</logRulesInitiator>		
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">	
		<defName>ReactToThought_NeedBeauty_pretty</defName>
		<label>need — beauty — react to pretty</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
						<li>good_opinion(INITIATOR_thoughtLabel==hideous environment,priority=1)->What!? Are we speaking of the same place, [RECIPIENT_nameDef]?! This place is totally [ugly]!</li>
						<li>good_opinion(INITIATOR_thoughtLabel==ugly environment,priority=1)->I don't know where have you been lately, [RECIPIENT_nameDef] — but rest assured: this place is [ugly].</li>
						<li>good_opinion(INITIATOR_thoughtLabel==unsightly environment,priority=1)->Well, [RECIPIENT_nameDef]... Maybe you're right, but there is a lot of space for improvement, I think.</li>
						<li>good_opinion->You might be right, [RECIPIENT_nameDef] — but I don't find it as pretty as you say.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==pretty environment,priority=1)->That's exactly what I think, [RECIPIENT_nameDef]!</li>
						<li>good_opinion(INITIATOR_thoughtLabel==beautiful environment,priority=1)->I believe it's even better than that, [RECIPIENT_nameDef].</li>
						<li>good_opinion(INITIATOR_thoughtLabel==gorgeous environment,priority=1)->Well, I personally believe this place is much more — it's simply gorgeous!</li>
				<!-- ===WILDCARDS=== -->
					<li>ugly->bad</li>
					<li>ugly->unsightly</li>
					<li>ugly->unattractive</li>
					<li>ugly->horrible</li>
					<li>ugly->frightful</li>
					<li>ugly->awful</li>
					<li>ugly(INITIATOR_intellectual_level>=5)->ghastly</li>
					<li>ugly(INITIATOR_intellectual_level>=5)->foul</li>
					<li>ugly(INITIATOR_intellectual_level>=10)->repugnant</li>
					<li>ugly(INITIATOR_intellectual_level>=10)->unprepossessing</li>
			</rulesStrings>
		</logRulesInitiator>		
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">	
		<defName>ReactToThought_NeedBeauty_beautiful</defName>
		<label>need — beauty — react to beautiful</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
						<li>good_opinion(INITIATOR_thoughtLabel==hideous environment,priority=1)->What!? Are we speaking of the same place, [RECIPIENT_nameDef]?! This place is totally [ugly]!</li>
						<li>good_opinion(INITIATOR_thoughtLabel==ugly environment,priority=1)->I don't know where have you been lately, [RECIPIENT_nameDef] — but rest assured: this place is [ugly].</li>
						<li>good_opinion(INITIATOR_thoughtLabel==unsightly environment,priority=1)->I don't agree with that — this place is actually far from perfection.</li>
						<li>good_opinion->You might be right, [RECIPIENT_nameDef] — but I don't find it as nice as you say.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==pretty environment,priority=1)->Yes, [RECIPIENT_nameDef] — but I think it still needs some minor improvement.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==beautiful environment,priority=1)->That's exactly what I think, [RECIPIENT_nameDef]!</li>
						<li>good_opinion(INITIATOR_thoughtLabel==gorgeous environment,priority=1)->Well, I personally believe this place is more than that — it's simply gorgeous!</li>
				<!-- ===WILDCARDS=== -->
					<li>ugly->bad</li>
					<li>ugly->unsightly</li>
					<li>ugly->unattractive</li>
					<li>ugly->horrible</li>
					<li>ugly->frightful</li>
					<li>ugly->awful</li>
					<li>ugly(INITIATOR_intellectual_level>=5)->ghastly</li>
					<li>ugly(INITIATOR_intellectual_level>=5)->foul</li>
					<li>ugly(INITIATOR_intellectual_level>=10)->repugnant</li>
					<li>ugly(INITIATOR_intellectual_level>=10)->unprepossessing</li>
			</rulesStrings>
		</logRulesInitiator>		
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">	
		<defName>ReactToThought_NeedBeauty_gorgeous</defName>
		<label>need — beauty — react to gorgeous</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
						<li>good_opinion(INITIATOR_thoughtLabel==hideous environment,priority=1)->What!? Are we speaking of the same place, [RECIPIENT_nameDef]?! This place is totally [ugly]!</li>
						<li>good_opinion(INITIATOR_thoughtLabel==ugly environment,priority=1)->I don't know where have you been lately, [RECIPIENT_nameDef] — but rest assured: this place is [ugly].</li>
						<li>good_opinion(INITIATOR_thoughtLabel==unsightly environment,priority=1)->I don't agree with that — this place is actually far from perfection.</li>
						<li>good_opinion->You might be right, [RECIPIENT_nameDef] — but I don't find it as nice as you say.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==pretty environment,priority=1)->Well, [RECIPIENT_nameDef] — I think it still needs some improvement.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==beautiful environment,priority=1)->Yes, [RECIPIENT_nameDef] — but I think it still needs some minor improvement.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==gorgeous environment,priority=1)->That's exactly what I think, [RECIPIENT_nameDef]!</li>
				<!-- ===WILDCARDS=== -->
					<li>ugly->bad</li>
					<li>ugly->unsightly</li>
					<li>ugly->unattractive</li>
					<li>ugly->horrible</li>
					<li>ugly->frightful</li>
					<li>ugly->awful</li>
					<li>ugly(INITIATOR_intellectual_level>=5)->ghastly</li>
					<li>ugly(INITIATOR_intellectual_level>=5)->foul</li>
					<li>ugly(INITIATOR_intellectual_level>=10)->repugnant</li>
					<li>ugly(INITIATOR_intellectual_level>=10)->unprepossessing</li>
			</rulesStrings>
		</logRulesInitiator>		
	</InteractionDef>
<!-- ===END of Need — Beauty=== -->

	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_NeedComfort</defName>
		<label>need — comfort</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===recipient is uncomfortable=== -->
						<li>good_opinion(RECIPIENT_thoughtLabel==uncomfortable,priority=1)->[recipient_uncomfortable]</li>
						<li>recipient_uncomfortable(INITIATOR_thoughtLabel==uncomfortable,priority=1)->I totally agree, [RECIPIENT_nameDef]. [comment]</li>
						<li>recipient_uncomfortable->I'm sorry to hear that, [RECIPIENT_nameDef]. [comment]</li>
					<!-- ===recipient is comfortable=== -->
						<li>good_opinion->[recipient_comfortable]</li>
						<li>recipient_comfortable(INITIATOR_thoughtLabel==uncomfortable,priority=1)->Really, [RECIPIENT_nameDef]? My aching back doesn't agree with you.</li>
						<li>recipient_comfortable->I'm glad about it too, [RECIPIENT_nameDef]!</li>
				<!-- ===WILDCARDS=== -->
					<li>comment-></li>
					<li>comment(INITIATOR_construction_level>=5,priority=1)->I'll try and build some better furniture for us.</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply"><!-- ===need — react to hunger=== -->
		<defName>ReactToThought_NeedFood</defName>
		<label>need — react to hunger</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===Also hungry or worse === -->
						<li>good_opinion(INITIATOR_thoughtDefName==NeedFood,priority=2)->[hungry_too]</li>
						<!-- ===hungry === -->
							<li>hungry_too(INITIATOR_thoughtLabel==hungry)->[thought_needfood_hungry0]</li>
							<li>thought_needfood_hungry0->I'm really hungry.</li>
							<li>thought_needfood_hungry0->I'm feeling peckish.</li>
							<li>thought_needfood_hungry0->I could eat [animal_large]!</li>
							<li>thought_needfood_hungry0->I'm starving!</li>
							<li>thought_needfood_hungry0->I'm ravenous!</li>
							<li>thought_needfood_hungry0->I'm famished!</li>
							<li>thought_needfood_hungry0->I'm dying for something to eat!</li>
							<li>thought_needfood_hungry0(RECIPIENT_thoughtLabel==hungry,priority=2)->Me too, [RECIPIENT_nameDef]!</li>
							<li>thought_needfood_hungry0(RECIPIENT_thoughtDefName==NeedFood,priority=1)->I'm also hungry, [RECIPIENT_nameDef]. But you are in much greater need! [offer_solution]</li>
						<!-- ===ravenously hungry === -->
							<li>hungry_too(INITIATOR_thoughtLabel==ravenously hungry)->[thought_needfood_hungry1]</li>
							<li>thought_needfood_hungry1->I'm feeling weak from hunger. I must eat somthing right now!</li>
						<!-- ===malnourished === -->
							<li>hungry_too(INITIATOR_thoughtLabel==malnourished)->[thought_needfood_hungry2]</li>
							<li>thought_needfood_hungry2->I can feel... my body starting to waste away.</li>
						<!-- ===badly malnourished === -->
							<li>hungry_too(INITIATOR_thoughtLabel==badly malnourished)->[thought_needfood_hungry3]</li>
							<li>thought_needfood_hungry3->So hungry... my stomach hurts like never before.</li>
						<!-- ===starving === -->
							<li>hungry_too(INITIATOR_thoughtLabel==starving)->[thought_needfood_hungry4]</li>
							<li>thought_needfood_hungry4->My skin is stretching over my bones. Am I going to die?</li>
						<!-- ===advanced starvation === -->
							<li>hungry_too(INITIATOR_thoughtLabel==advanced starvation)->[thought_needfood_hungry5]</li>
							<li>thought_needfood_hungry5->I feel like I'm going to pass out and starve to death.</li>
						<!-- ===extreme starvation === -->
							<li>hungry_too(INITIATOR_thoughtLabel==extreme starvation)->[thought_needfood_hungry6]</li>
							<li>thought_needfood_hungry6->Food... food... anything... please...</li>					
					<!-- ===Not hungry === -->
						<!-- ===Recipient is only a bit hungry === -->
							<li>good_opinion(RECIPIENT_thoughtLabel==hungry,priority=1)->Try the cooking area or the pantry — you might find something to eat there.</li>
						<!-- ===Recipient is in dire conditions === -->
							<li>good_opinion->I'm so sorry about that, [RECIPIENT_nameDef]. [offer_solution]</li>
				<!-- ===WILDCARDS=== -->
				<!-- ===offer a solution=== -->
					<li>offer_solution-></li>
					<li>offer_solution(INITIATOR_faction==PlayerColony,priority=1)->[offer_solution_colonist]</li>
					<li>offer_solution(INITIATOR_faction==PlayerTribe,priority=1)->[offer_solution_colonist]</li>
					<li>offer_solution_colonist(INITIATOR_plants_level>=5)->We should consider enlarging our fields, so it won't happen again.</li>
					<li>offer_solution_colonist(INITIATOR_animals_level>=5)->We should consider getting more cattle, so it won't happen again.</li>
					<li>offer_solution_colonist(INITIATOR_animals_level>=5,INITIATOR_shooting_level>=5)->I'll try and hunt something — I hope it helps.</li>
					<li>offer_solution_colonist(INITIATOR_social_level>=5)->Let's hope some caravan passes by — I'll negotiate for more food myself.</li>
				<!-- ===animal — large=== -->
					<li>animal_large->a horse</li>
					<li>animal_large->a muffalo</li>
					<li>animal_large->a thrumbo</li>
					<li>animal_large->an elephant</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_NeedFood_CookRecipient</defName>
		<label>need — react to hunger — recipient cook</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->Cook it yourself, [RECIPIENT_nameDef]!</li>
					<li>r_logentry(INITIATOR_opinion&lt;0)->For all I care, [RECIPIENT_nameDef], you may starve to death!</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===Default === -->
						<li>good_opinion(RECIPIENT_mood&lt;0.4,priority=1)->Calm down, [RECIPIENT_nameDef]! As soon as I can get my hands on some ingredients, I'll get you a meal!</li>
						<li>good_opinion->I'll cook some tasty food as soon as possible, [RECIPIENT_nameDef]. Just wait a little while...</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>

	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_NeedFood_RecipientCooking</defName>
		<label>need — react to hunger — recipient is cooking</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
						<li>good_opinion(INITIATOR_jobText==Cooking simple meal.)->[cooking_intro] [cooking_start]some nice food!</li>
						<li>good_opinion(INITIATOR_jobText==Cooking 4 simple meals.)->[cooking_intro] [cooking_start]some nice food!</li>
						<li>good_opinion(INITIATOR_jobText==Cooking fine meal.)->[cooking_intro] [cooking_start]a fine meal!</li>
						<li>good_opinion(INITIATOR_jobText==Cooking 4 fine meals.)->[cooking_intro] [cooking_start]a fine meal!</li>
						<li>good_opinion(INITIATOR_jobText==Cooking lavish meal.)->[cooking_intro] [cooking_start]a lavish meal!</li>
						<li>good_opinion(INITIATOR_jobText==Cooking 4 lavish meals.)->[cooking_intro] [cooking_start]a lavish meal!</li>
						<li>cooking_intro->Be patient, [RECIPIENT_nameDef]!</li>
						<li>cooking_intro->Keep your pants on, [RECIPIENT_nameDef]!</li>
						<li>cooking_intro->Hold your horses, [RECIPIENT_nameDef]!</li>
						<li>cooking_intro->It'll be a moment, [RECIPIENT_nameDef]!</li>
						<li>cooking_start->Just give me a few more minutes and you'll get </li>
						<li>cooking_start->I'm on it right now — you'll soon get </li>
						<li>cooking_start->I'm nearly done, you'll get</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>	
	
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_NeedJoy</defName>
		<label>need — react to joy</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===recreation-starved === -->
						<li>good_opinion(INITIATOR_thoughtLabel==recreation-starved,priority=1)->[thought_needjoy_bored0]</li>
						<li>thought_needjoy_bored0->I really feel like a slave here. All work, no fun.</li>
						<li>thought_needjoy_bored0->All work and no play makes Jack a dull boy... that's my life right now!</li>
						<li>thought_needjoy_bored0->All work and no play makes [INITIATOR_nameDef] a dull boy...</li>						
					<!-- ===recreation-deprived === -->
						<li>good_opinion(INITIATOR_thoughtLabel==recreation-deprived,priority=1)->[thought_needjoy_bored1]</li>
						<li>thought_needjoy_bored1->Let's face it — you can easily get bored around here</li>
					<!-- ===recreation unfulfilled === -->
						<li>good_opinion(INITIATOR_thoughtLabel==recreation unfulfilled,priority=1)->[thought_needjoy_bored2]</li>
						<li>thought_needjoy_bored2->I wish I could have more fun around here.</li>
					<!-- ===recreation normal === -->
						<li>good_opinion->I believe we can have some fun around here. It's OK.</li>					
					<!-- ===recreation satisfied === -->
						<li>good_opinion(INITIATOR_thoughtLabel==recreation satisfied,priority=1)->I think we have several nice entertainment options around here.</li>
					<!-- ===recreation fully satisfied === -->
						<li>good_opinion(INITIATOR_thoughtLabel==recreation fully satisfied,priority=1)->I think we have lots of excellent entertainment options around here!</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>	
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_NeedRest</defName>
		<label>need — rest</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===initiator is tired too=== -->
						<li>good_opinion(INITIATOR_thoughtDefName==NeedRest,priority=1)->[tired]</li>
						<li>tired(INITIATOR_thoughtLabel==drowsy)->Tell me about it, [RECIPIENT_nameDef]... I'm a little drowsy myself.</li>
						<li>tired(INITIATOR_thoughtLabel==tired)->Heh, [RECIPIENT_nameDef]... I'm quite tired myself.</li>
						<li>tired(INITIATOR_thoughtLabel==exhausted)->Aww, [RECIPIENT_nameDef]... my eyelids have lead weights on them. I'm exhausted.</li>
					<!-- ===initiator is fresh=== -->
						<li>good_opinion->[fresh]</li>
						<li>fresh->Go and have some rest, [RECIPIENT_nameDef] — you deserve it.</li>
						<li>fresh->Have some rest, [RECIPIENT_nameDef] — I'll try to cover for you.</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_NeedSpace</defName>
		<label>need — roomsize</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===initiator dissatisfied=== -->
						<li>good_opinion(INITIATOR_thoughtLabel==confined interior,priority=1)->[dissatisfied]</li>
						<li>good_opinion(INITIATOR_thoughtLabel==cramped interior,priority=1)->[dissatisfied]</li>
						<li>dissatisfied(INITIATOR_construction_level>=5)->You're right, [RECIPIENT_nameDef]. I'll do my best to fix that.</li>
						<li>dissatisfied(INITIATOR_construction_level&lt;5)->You're right, [RECIPIENT_nameDef]. I feel the same.</li>
						<li>dissatisfied(INITIATOR_construction_level>=5,RECIPIENT_construction_level>=5,priority=1)->Yes, [RECIPIENT_nameDef]. In fact, I will help you with that.</li>
						<li>dissatisfied(INITIATOR_construction_level&lt;5,RECIPIENT_construction_level>=5,priority=1)->Yes, [RECIPIENT_nameDef]. Please go ahead, we need it!</li>
					<!-- ===initiator satisfied=== -->
						<li>good_opinion->[satisfied1]</li>
						<li>satisfied1->Well, [RECIPIENT_nameDef] — you could be right but I believe our living spaces are just fine the way they are</li>
					<!-- ===initiator very satisfied=== -->
						<li>good_opinion(INITIATOR_thoughtLabel==spacious interior,priority=1)->[satisfied2]</li>
						<li>satisfied2->Are you sure, [RECIPIENT_nameDef]? I think our living spaces are quite spacious!</li>						
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_NewColony</defName>
		<label>new colony</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion(INITIATOR_trait==pessimist,priority=1)->I don't know, [RECIPIENT_nameDef]. Probably we'll soon die of starvation or get killed in a raid.</li>
					<li>good_opinion(INITIATOR_trait==depressive,priority=1)->We're doomed, [RECIPIENT_nameDef]. Doomed... that's all we are.</li>
					<li>good_opinion(INITIATOR_trait==wimp,priority=1)->Really, [RECIPIENT_nameDef]? This place looks dangerous... I'm scared.</li>
					<li>good_opinion(INITIATOR_trait==nervous,priority=1)->I... I hope you're right, [RECIPIENT_nameDef]. But I'm... I'm quite cross about our situation here.</li>
					<li>good_opinion(INITIATOR_trait==volatile,priority=1)->No, [RECIPIENT_nameDef]. You got it all wrong. In fact, we should get ready for the worst.</li>
					<li>good_opinion(INITIATOR_trait==ascetic,RECIPIENT_trait==ascetic,priority=1)->Wise words, [RECIPIENT_nameDef]. Wise words.</li>
					<li>good_opinion->[yes], [RECIPIENT_nameDef]! [comment]</li>
				<!-- ===WILDCARDS=== -->
					<li>yes->Yes</li>
					<li>yes->Well said</li>
					<li>yes->That's right</li>
					<li>yes->Correct</li>
					<li>comment->We can do this!</li>
					<li>comment->We can make it!</li>
					<li>comment->It'll be all right!</li>
					<li>comment->We'll get through this!</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply"> <!-- saw unburied corpse -->
		<defName>ReactToThought_ObservedLayingCorpse</defName>
		<label>saw unburied corpse</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
					<li>r_logentry(INITIATOR_opinion&lt;0)->I wouldn't bury you, either.</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->Oh my, [RECIPIENT_nameDef]. [saw_it]I hope someone took care of it already.</li>
					<li>good_opinion(INITIATOR_trait==pyromaniac)->We should burn it right away!</li>
					<li>good_opinion(INITIATOR_trait==cannibal)->We should store it in a cold room for... further use.</li>
					<li>good_opinion(INITIATOR_trait==cannibal,INITIATOR_medical_level>=5)->We should store it in a cold room for further scientific studies.</li>
					<li>good_opinion(INITIATOR_medical_level>=5)->We should bury or cremate it right away — to avoid health problems.</li>
					<li>good_opinion(INITIATOR_trait==psychopath,priority=1)->[saw_it]No big deal...</li>
					<li>good_opinion(INITIATOR_trait==bloodlust)->It's just one more of the many we shall see around here. No big deal.</li>
					<li>saw_it-></li>
					<li>saw_it(INITIATOR_thoughtDefName==ObservedLayingCorpse)->I saw it too. </li>
					<li>saw_it(INITIATOR_thoughtDefName==ObservedLayingRottingCorpse)->I saw worse than that — I saw a rotting one. </li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_ObservedLayingRottingCorpse</defName><!-- saw unburied rotten corpse -->
		<label>saw unburied rotten corpse</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
					<li>r_logentry(INITIATOR_opinion&lt;0)->I'd leave you to rot, too...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->That's disgusting, [RECIPIENT_nameDef]! [saw_it]I hope someone took care of it already.</li>
					<li>good_opinion(INITIATOR_trait==pyromaniac)->We should burn it right away!</li>
					<li>good_opinion(INITIATOR_medical_level>=5)->We should bury or cremate it right away — to avoid health problems.</li>
					<li>good_opinion(INITIATOR_trait==psychopath,priority=1)->[saw_it]Even for me, that's disgusting.</li>
					<li>good_opinion(INITIATOR_trait==bloodlust)->It's just one more of the many we shall see around here. No big deal.</li>
					<li>saw_it-></li>
					<li>saw_it(INITIATOR_thoughtDefName==ObservedLayingCorpse)->I saw one too — but it wasn't rotting. </li>
					<li>saw_it(INITIATOR_thoughtDefName==ObservedLayingRottingCorpse)->I saw one too. </li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply"><!-- ===released prisoner === -->
		<defName>ReactToThought_ReleasedPrisoner</defName>
		<label>released prisoner</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->I agree, [RECIPIENT_nameDef]!</li>
					<!-- ===Initiator is Kind=== -->
						<li>good_opinion(INITIATOR_trait==kind,priority=1)->[i_kind]</li>
						<li>i_kind->We certainly did the right and most humane thing, [RECIPIENT_nameDef]!</li>
						<li>i_kind(RECIPIENT_trait==kind,priority=2)->In the end, treating others kindly is always the best choice!</li>
						<li>i_kind(RECIPIENT_trait==bloodlust,priority=1)->[i_kind_r_canniblood]</li>
						<li>i_kind(RECIPIENT_trait==cannibal,priority=1)->[i_kind_r_canniblood]</li>
						<li>i_kind_r_canniblood->That's just so wrong, [RECIPIENT_nameDef]! I totally disagree!</li>
					<!-- ===Initiator is Cannibal or Bloodlusty=== -->
						<li>good_opinion(INITIATOR_trait==cannibal,priority=1)->[i_canniblood]</li>
						<li>good_opinion(INITIATOR_trait==bloodlust,priority=1)->[i_canniblood]</li>
						<li>i_canniblood->Just wait for when that jerk comes back here for more stealing, burning and killing!</li>
						<li>i_canniblood(RECIPIENT_trait==bloodlust,priority=1)->[i_canniblood_r_canniblood]</li>
						<li>i_canniblood(RECIPIENT_trait==cannibal,priority=1)->[i_canniblood_r_canniblood]</li>
						<li>i_canniblood_r_canniblood->Right! We could've used'em as a punching bag!</li>
						<li>i_canniblood_r_canniblood->Right! We could've tortured'em for fun!</li>
						<li>i_canniblood_r_canniblood->Right! We could've tortured'em to squeeze out some useful intelligence!</li>
						<li>i_canniblood_r_canniblood->Right! We could've skinned'em — a just punishment!</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_Rescued</defName>
		<label>rescued</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->You should be thankful indeed, [RECIPIENT_nameDef]. Let's hope rescuing you was worth our while!</li>
					<li>r_logentry(INITIATOR_opinion&lt;0)->Sometimes I think that we would've been better off leaving you in the wilderness...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->No problem, [RECIPIENT_nameDef]. It was the right thing to do.</li>
					<li>good_opinion(INITIATOR_trait==kind)->You really don't need to thank us — we just did our duty as good human beings.</li>
					<li>good_opinion(INITIATOR_trait==psychopath,priority=1)->...</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_Sick</defName>
		<label>sick</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->I'm sorry to hear that, [RECIPIENT_nameDef]. [comment]</li>
					<li>comment-></li>
					<li>comment(INITIATOR_medical_level>=5)->I could give you some medicine to speed up the healing process.</li>
					<li>comment(INITIATOR_plants_level>=8,priority=1)->I could prepare for you a potent healing concoction, if you want.</li>
					<li>comment(INITIATOR_plants_level>=5)->I could prepare some healroot for you, if you want.</li>
					<li>comment(INITIATOR_cooking_level>=6)->Eating healthy food might help avoiding that. I could cook something for you.</li>
					<li>comment(INITIATOR_thoughtDefName==sick)->I'm not in great shape either...</li>
					<li>comment(INITIATOR_thoughtDefName==body modder)->But then again, human body is so vulnerable...</li>
					<li>comment(INITIATOR_thoughtDefName==sickly)->I know how it feels, I get sick all the time...</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply"><!-- ===Sleep disturbed === -->
		<defName>ReactToThought_SleepDisturbed</defName>
		<label>sleep disturbed</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->You're right, [RECIPIENT_nameDef]. We should be more careful to avoid such things.</li>
					<li>good_opinion(INITIATOR_trait==nimble)->You know it wasn't me, [RECIPIENT_nameDef]. I'm always quiet when I walk.</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply"><!-- ===Sleep disturbed — nice dream === -->
		<defName>ReactToThought_SleepDisturbed_Dream</defName>
		<label>sleep disturbed dream</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion(tag=Dream_nice)->Ah, [RECIPIENT_nameDef]. What a pity... what was this dream about?</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply"><!-- ===nice dream === -->
		<defName>Dream_nice</defName>
		<label>dream — nice</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;-25)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=-25)->[dream]</li>
					<li>dream->I was in a [AdjectiveFriendly] [Community] — so nice! [fun_activity]</li>
						<li>fun_activity->Everybody was dancing and having fun...</li>
						<li>fun_activity->Everybody was laughing and drinking beer...</li>
						<li>fun_activity->There was this large [color]table filled with [nice_food]...</li>
						<li>fun_activity->There was this [AdjectiveFriendly] singer, enthralling everybody with her sweet voice...</li>
					<li>dream->I was flying over a beautiful [color][TerrainFeature] — [description1]. They looked so tiny from up there...</li>
					<li>description1->crowded by [color][AdjectiveFriendly] [PersonJob]s</li>
					<li>description1->crawling with [color][AdjectiveFriendly] [Animal]s</li>
					<li>dream->I peacefully walked in a [AdjectiveLarge] [TreeType] forest. So relaxing...</li>
					<li>dream->I was on a stage performing a standup show for [AdjectiveFriendly] [color][Animals]s — everybody was drinking beer and laughing hard!</li>
					<li>dream->There was this [AdjectiveFriendly] [PersonJob] who gave me this [color][Apparel] — I wore it, and I instantly felt so happy!</li>
					<li>dream->I was happily swimming in a pool of [color][Vegetable]s — weird right? But when I ate them, they tasted like [nice_food]!</li>
					<li>dream->There was this [AdjectiveFriendly] [PersonJob] speaking to me about [TalkTopicAny] — it was so interesting!</li>
					<li>dream->There was this floating [color]parchment with a moving [color]mouth, reciting [poem_adj] poem about [TalkTopicAny]...</li>
					<li>dream->I don't remember its details, but I recall it was something about [TalkTopicAny] and that it felt me feel good...</li>
				<!-- ===WILDCARDS=== -->
					<li>color-></li>
					<li>color->[Color] </li>
					<li>nice_food->cupcakes</li>
					<li>nice_food->fried chicken</li>
					<li>nice_food->bacon pizza</li>
					<li>nice_food->doughnuts</li>
					<li>nice_food->honey</li>
					<li>nice_food->chocolate</li>
					<li>nice_food->milkshake</li>
					<li>nice_food->hamburgers</li>
					<li>nice_food->lasagna</li>
					<li>poem_adj->an elegant</li>
					<li>poem_adj->a beautiful</li>
					<li>poem_adj->a charming</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>	
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_SleptInBarracks</defName>
		<label>slept in a shared room</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
						<li>good_opinion(RECIPIENT_thoughtLabel==awful barrack)->That's extremely [annoying], [RECIPIENT_nameDef] — I certainly agree with you.</li>
						<li>good_opinion(RECIPIENT_thoughtLabel==dull barrack)->That's very [annoying], [RECIPIENT_nameDef] — I do agree with you.</li>
						<li>good_opinion(RECIPIENT_thoughtLabel==mediocre barrack)->That's [annoying], [RECIPIENT_nameDef] — I agree with you.</li>
						<li>good_opinion(RECIPIENT_thoughtLabel==decent barrack)->Well, [RECIPIENT_nameDef] — at least it's a decent room.</li>
						<li>good_opinion(RECIPIENT_thoughtLabel==slightly impressive barrack)->Well, [RECIPIENT_nameDef] — at least it's a pretty nice room.</li>
						<li>good_opinion(RECIPIENT_thoughtLabel==impressive barrack)->Well, [RECIPIENT_nameDef] — at least it's an impressive room.</li>
						<li>good_opinion(RECIPIENT_thoughtLabel==very impressive barrack)->Well, [RECIPIENT_nameDef] — good for you!</li>
						<li>good_opinion(RECIPIENT_thoughtLabel==extremely impressive barrack)->Well, [RECIPIENT_nameDef] — that's great!</li>
						<li>good_opinion(RECIPIENT_thoughtLabel==unbelievably impressive barrack)->Well, [RECIPIENT_nameDef] — that's just awesome!</li>
				<!-- ===WILDCARDS=== -->
					<li>annoying->bad</li>
					<li>annoying->irritating</li>
					<li>annoying->infuriating</li>
					<li>annoying->maddening</li>
					<li>annoying->bothersome</li>
					<li>annoying->unacceptable</li>
					<li>annoying(INITIATOR_intellectual_level>=5)->unseemly</li>
					<li>annoying(INITIATOR_intellectual_level>=5)->displeasing</li>
					<li>annoying(INITIATOR_intellectual_level>=10)->inadmissible</li>				
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_Bedroom</defName>
		<label>bedroom</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->[bad_opinion]</li>
						<li>bad_opinion->My room is none of your business, [RECIPIENT_nameDef].</li>
						<li>bad_opinion->Where I sleep is none of your business, [RECIPIENT_nameDef].</li>
						<li>bad_opinion->None of your business, [RECIPIENT_nameDef].</li>
						<li>bad_opinion->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===Slept on the ground=== -->
						<li>good_opinion(INITIATOR_thoughtDefName==SleptOnGround,priority=4)->I don't have a bedroom — in fact, I don't even have a bed!</li>		
					<!-- ===Slept outside=== -->
						<li>good_opinion(INITIATOR_thoughtDefName==SleptOutside,priority=4)->What bedroom!? Last time I slept, it was out in the open!</li>
					<!-- ===Ascetic=== -->
						<li>good_opinion(INITIATOR_thoughtLabel==ascetic has awful bedroom,priority=4)->Mine is just how I want it to be — very humble and simple.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==ascetic has dull bedroom,priority=4)->Mine is just how I want it to be — humble and simple.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==ascetic has mediocre bedroom,priority=4)->Mine is simple. I like it.</li>
						<li>good_opinion(INITIATOR_thoughtLabel==ascetic has impressive bedroom,priority=4)->Mine is unnecessarily pompous and extravagant. I'd rather sleep in a simpler room.</li>
					<!-- ===Barracks=== -->
						<li>good_opinion(INITIATOR_thoughtDefName==SleptInBarracks,priority=3)->I don't have my own bedroom — I share one with others.</li>
						<li>good_opinion(INITIATOR_thoughtDefName==SleptInBarracks,priority=3)->I wish I had my own bedroom... who knows when I'll get one...</li>
					<!-- ===Good bedroom=== -->
						<li>good_opinion(INITIATOR_thoughtDefName==SleptInBedroom,priority=2)->[bedroom]</li>
						<li>bedroom(INITIATOR_thoughtLabel==decent bedroom)->I can say mine is decent, [RECIPIENT_nameDef].</li>
						<li>bedroom(INITIATOR_thoughtLabel==slightly impressive bedroom)->Mine is quite nice, [RECIPIENT_nameDef].</li>
						<li>bedroom(INITIATOR_thoughtLabel==impressive bedroom)->Mine is impressive, [RECIPIENT_nameDef].</li>
						<li>bedroom(INITIATOR_thoughtLabel==very impressive bedroom)->Mine is very impressive, [RECIPIENT_nameDef]!</li>
						<li>bedroom(INITIATOR_thoughtLabel==extremely impressive bedroom)->Mine is extremely impressive, [RECIPIENT_nameDef]!</li>
						<li>bedroom(INITIATOR_thoughtLabel==unbelievably impressive bedroom)->Mine feels like a piece of Heaven itself, [RECIPIENT_nameDef]!</li>
						<li>bedroom(INITIATOR_thoughtLabel==wondrously impressive bedroom)->Mine is worthy of an emperor, [RECIPIENT_nameDef]!</li>
					<!-- ===Dull or mediocre bedroom=== -->
						<li>good_opinion->Mine? Mine could be... better[construction]</li>
					<!-- ===Awful bedroom=== -->
						<li>good_opinion(INITIATOR_thoughtLabel==awful bedroom,priority=1)->[bedroom_awful]</li>
						<li>bedroom_awful->Mine is so awful — sometimes I think I'd be better off sleeping in the open.</li>
						<li>bedroom_awful->I confess mine is awful[construction]</li>
				<!-- ===WILDCARDS === -->
					<li>construction(INITIATOR_construction_level>=5,priority=1)->, but I'm planning to improve it myself.</li>
					<li>construction->.</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply"><!-- ===slept in cold (general) === -->
		<defName>ReactToThought_SleptInCold</defName>
		<label>slept in cold</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->[bad_opinion]</li>
					<li>bad_opinion->...</li>
					<li>bad_opinion->Are you sure it's the weather — and not you — that's making your room so cold?</li>
					<li>bad_opinion(INITIATOR_trait==pyromaniac)->If you'd like, I can set your bed on fire to warm you up.</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->Let's hope it won't happen again, [RECIPIENT_nameDef] — it's [annoying].</li>
					<li>good_opinion(INITIATOR_faction==PlayerColony)->Yeah... I wish we settled somewhere warmer.</li>
					<li>good_opinion(INITIATOR_faction==PlayerTribe)->Yeah... I wish we settled somewhere warmer.</li>
					<li>good_opinion->Well, it gets [weather_cold_adj] this time of the year...we just have to get used to it.</li>
						<li>weather_cold_adj->chilly</li>
						<li>weather_cold_adj->cold</li>
						<li>weather_cold_adj(INITIATOR_intellectual_level>=5)->frigid</li>
					<li>good_opinion(INITIATOR_trait==pyromaniac)->Well, wouldn't it be nice if I started a big fire to warm us all up?</li>
					<li>good_opinion(INITIATOR_social_passion!=None)->Maybe it'd be better if we all huddled together.</li>
					<li>good_opinion(INITIATOR_thoughtDefName==SleptInCold)->I agree with you — I woke up covered in goosebumps!</li>
				<!-- ===WILDCARDS=== -->
					<li>annoying->bad</li>
					<li>annoying->irritating</li>
					<li>annoying->infuriating</li>
					<li>annoying->maddening</li>
					<li>annoying->bothersome</li>
					<li>annoying->unacceptable</li>
					<li>annoying->not nice</li>
					<li>annoying->unpleasant</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>

	<InteractionDef ParentName="SpeakUpReply"><!-- ===slept in cold (construction) === -->
		<defName>ReactToThought_SleptInCold_construction</defName>
		<label>slept in cold — construction</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->[bad_opinion]</li>
					<!-- ===Initiator is not skilled in construction=== -->
						<li>bad_opinion(INITIATOR_construction_level&lt;5)->[bad_opinion_unskilled]</li>
						<!-- ===Recipient is skilled in construction (guaranteed)=== -->
							<li>bad_opinion_unskilled(RECIPIENT_construction_level>=5)->Yes you could have, [RECIPIENT_nameDef] — now, try to be more useful in the future!</li>
					<!-- ===Initiator is skilled in construction=== -->
						<li>bad_opinion(INITIATOR_construction_level>=5)->[bad_opinion_skilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>bad_opinion_skilled(RECIPIENT_construction_level&lt;5)->And I hope you [shut_up], [RECIPIENT_nameDef].</li>
								<li>shut_up->shut up</li>
								<li>shut_up->stop nagging me</li>
								<li>shut_up->stop bothering me</li>
								<li>shut_up->just shut up</li>
								<li>shut_up(INITIATOR_intellctual_level>=5)->would be quiet for an extended period of time</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>bad_opinion_skilled(RECIPIENT_construction_level>=5)->You need a heat source, [RECIPIENT_nameDef], you build one yourself — I've got more important things to do.</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===Initiator is not skilled in construction=== -->
						<li>good_opinion(INITIATOR_construction_level&lt;5)->[good_opinion_unskilled]</li>
						<!-- ===Recipient is skilled in construction (guaranteed)=== -->
							<li>good_opinion_unskilled(RECIPIENT_construction_level>=5)->Don't worry, [RECIPIENT_nameDef] — I'm sure you won't let this happen again.</li>
					<!-- ===Initiator is skilled in construction=== -->
						<li>good_opinion(INITIATOR_construction_level>=5)->[good_opinion_skilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>good_opinion_skilled(RECIPIENT_construction_level&lt;5)->I had planned to build a heat source, but I got distracted. Sorry, [RECIPIENT_nameDef] — it won't happen again.</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>good_opinion_skilled(RECIPIENT_construction_level>=5)->You're right [RECIPIENT_nameDef] — we could have built a proper heat source. We won't let this happen again.</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>

	<InteractionDef ParentName="SpeakUpReply"><!-- ===slept in heat (general) === -->
		<defName>ReactToThought_SleptInHeat</defName>
		<label>slept in heat</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->[bad_opinion]</li>
					<li>bad_opinion->Is it that hot for you, [RECIPIENT_nameDef]? I thought the temperature was quite comfortable.</li>
					<li>bad_opinion->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->I know, it's [annoying]! Here's hoping that we get some new coolers installed.</li>
					<li>good_opinion->Well, it gets hot this time of the year — we just have to get used to it.</li>
					<li>good_opinion(INITIATOR_thoughtDefName==SleptInHeat)->Agreed! It was so hot that I woke up sweating!</li>
					<li>good_opinion(INITIATOR_mood>=0.7)->Yeah — at this rate, we should relocate our beds to a freezer!</li>
				<!-- ===WILDCARDS=== -->
					<li>annoying->bad</li>
					<li>annoying->irritating</li>
					<li>annoying->infuriating</li>
					<li>annoying->maddening</li>
					<li>annoying->bothersome</li>
					<li>annoying->unacceptable</li>
					<li>annoying->not nice</li>
					<li>annoying->unpleasant</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	
	<InteractionDef ParentName="SpeakUpReply"><!-- ===slept in heat (construction) === -->
		<defName>ReactToThought_SleptInHeat_construction</defName>
		<label>slept in heat — construction</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->[bad_opinion]</li>
					<!-- ===Initiator is not skilled in construction=== -->
						<li>bad_opinion(INITIATOR_construction_level&lt;5)->[bad_opinion_unskilled]</li>
						<!-- ===Recipient is skilled in construction (guaranteed)=== -->
							<li>bad_opinion_unskilled(RECIPIENT_construction_level>=5)->Yes you could have, [RECIPIENT_nameDef] — now, try to be more useful in the future!</li>
					<!-- ===Initiator is skilled in construction=== -->
						<li>bad_opinion(INITIATOR_construction_level>=5)->[bad_opinion_skilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>bad_opinion_skilled(RECIPIENT_construction_level&lt;5)->And I hope you [shut_up], [RECIPIENT_nameDef].</li>
								<li>shut_up->shut up</li>
								<li>shut_up->stop nagging me</li>
								<li>shut_up->stop bothering me</li>
								<li>shut_up->just shut up</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>bad_opinion_skilled(RECIPIENT_construction_level>=5)->You need a cooler, [RECIPIENT_nameDef], you build one yourself — I've got more important things to do.</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===Initiator is not skilled in construction=== -->
						<li>good_opinion(INITIATOR_construction_level&lt;5)->[good_opinion_unskilled]</li>
						<!-- ===Recipient is skilled in construction (guaranteed)=== -->
							<li>good_opinion_unskilled(RECIPIENT_construction_level>=5)->Don't worry, [RECIPIENT_nameDef] — I'm sure you won't let this happen again.</li>
					<!-- ===Initiator is skilled in construction=== -->
						<li>good_opinion(INITIATOR_construction_level>=5)->[good_opinion_skilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>good_opinion_skilled(RECIPIENT_construction_level&lt;5)->I had planned to build a cooler, but I got distracted. Sorry, [RECIPIENT_nameDef] — it won't happen again.</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>good_opinion_skilled(RECIPIENT_construction_level>=5)->You're right [RECIPIENT_nameDef] — we could have built a cooler. We won't let this happen again.</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>	
	<InteractionDef ParentName="SpeakUpReply"><!-- ===slept on ground === -->
		<defName>ReactToThought_SleptOnGround</defName>
		<label>slept on ground</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->[bad_opinion]</li>
					<!-- ===Initiator is not skilled in construction=== -->
						<li>bad_opinion(INITIATOR_construction_level&lt;4)->[bad_opinion_unskilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>bad_opinion_unskilled(RECIPIENT_construction_level&lt;4)->...</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>bad_opinion_unskilled(RECIPIENT_construction_level>=4)->Yes you could have, [RECIPIENT_nameDef] — now, try to be more useful in the future!</li>
					<!-- ===Initiator is skilled in construction=== -->
						<li>bad_opinion(INITIATOR_construction_level>=4)->[bad_opinion_skilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>bad_opinion_skilled(RECIPIENT_construction_level&lt;4)->And I hope you [shut_up], [RECIPIENT_nameDef].</li>
								<li>shut_up->shut up</li>
								<li>shut_up->stop nagging me</li>
								<li>shut_up->stop bothering me</li>
								<li>shut_up->just shut up</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>bad_opinion_skilled(RECIPIENT_construction_level>=4)->Hey, [RECIPIENT_nameDef] — you need a bed, you build one yourself. I've got more important things to do.</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===Initiator is not skilled in construction=== -->
						<li>good_opinion(INITIATOR_construction_level&lt;4)->[good_opinion_unskilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>good_opinion_unskilled(RECIPIENT_construction_level&lt;4)->Let's hope it won't happen again, [RECIPIENT_nameDef] — it's [annoying].</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>good_opinion_unskilled(RECIPIENT_construction_level>=4)->Don't worry, [RECIPIENT_nameDef] — I'm sure you won't let this happen again.</li>
					<!-- ===Initiator is skilled in construction=== -->
						<li>good_opinion(INITIATOR_construction_level>=4)->[good_opinion_skilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>good_opinion_skilled(RECIPIENT_construction_level&lt;4)->I had planned to build a bed for you, but I got distracted. Sorry, [RECIPIENT_nameDef] — it won't happen again.</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>good_opinion_skilled(RECIPIENT_construction_level>=4)->You're right [RECIPIENT_nameDef] — we could have built a bed for you. We won't let this happen again.</li>
				<!-- ===WILDCARDS=== -->
					<li>annoying->bad</li>
					<li>annoying->irritating</li>
					<li>annoying->infuriating</li>
					<li>annoying->maddening</li>
					<li>annoying->bothersome</li>
					<li>annoying->unacceptable</li>
					<li>annoying->not nice</li>
					<li>annoying->unpleasant</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	
	
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_SleptOutside</defName>
		<label>slept outside</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->[bad_opinion]</li>
					<!-- ===Initiator is not skilled in construction=== -->
						<li>bad_opinion(INITIATOR_construction_level&lt;4)->[bad_opinion_unskilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>bad_opinion_unskilled(RECIPIENT_construction_level&lt;4)->...</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>bad_opinion_unskilled(RECIPIENT_construction_level>=4)->Yes you could have, [RECIPIENT_nameDef] — now, try to be more useful in the future!</li>
					<!-- ===Initiator is skilled in construction=== -->
						<li>bad_opinion(INITIATOR_construction_level>=4)->[bad_opinion_skilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>bad_opinion_skilled(RECIPIENT_construction_level&lt;4)->And I hope you [shut_up], [RECIPIENT_nameDef].</li>
								<li>shut_up->shut up</li>
								<li>shut_up->stop nagging me</li>
								<li>shut_up->stop bothering me</li>
								<li>shut_up->just shut up</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>bad_opinion_skilled(RECIPIENT_construction_level>=4)->Hey, [RECIPIENT_nameDef] — you need a roofed room, you build one yourself. I've got more important things to do.</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<!-- ===Initiator is not skilled in construction=== -->
						<li>good_opinion(INITIATOR_construction_level&lt;4)->[good_opinion_unskilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>good_opinion_unskilled(RECIPIENT_construction_level&lt;4)->Let's hope it won't happen again, [RECIPIENT_nameDef] — it's [annoying].</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>good_opinion_unskilled(RECIPIENT_construction_level>=4)->Don't worry, [RECIPIENT_nameDef] — I'm sure you won't let this happen again.</li>
					<!-- ===Initiator is skilled in construction=== -->
						<li>good_opinion(INITIATOR_construction_level>=4)->[good_opinion_skilled]</li>
						<!-- ===Recipient is not skilled in construction=== -->
							<li>good_opinion_skilled(RECIPIENT_construction_level&lt;4)->I had planned to build a roofed room for you, but I got distracted. Sorry, [RECIPIENT_nameDef] — it won't happen again.</li>
						<!-- ===Recipient is skilled in construction=== -->
							<li>good_opinion_skilled(RECIPIENT_construction_level>=4)->You're right [RECIPIENT_nameDef] — we could have built a roofed room for you. We won't let this happen again.</li>
				<!-- ===WILDCARDS=== -->
					<li>annoying->bad</li>
					<li>annoying->irritating</li>
					<li>annoying->infuriating</li>
					<li>annoying->maddening</li>
					<li>annoying->bothersome</li>
					<li>annoying->unacceptable</li>
					<li>annoying->not nice</li>
					<li>annoying->unpleasant</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>
	<InteractionDef ParentName="SpeakUpReply">
		<defName>ReactToThought_UndergrounderOutdoors</defName>
		<label>undergrounder outdoors</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->Go back inside then, [RECIPIENT_nameDef] — at least I won't hear your pitiful whining anymore!</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
					<li>good_opinion->I know, [RECIPIENT_nameDef] — but some vital tasks must be performed outdoors. We can't change that, unfortunately...</li>
					<li>good_opinion->I know, [RECIPIENT_nameDef] — maybe we could try and plan for you to run indoors tasks only.</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>

	<InteractionDef ParentName="SpeakUpReply"><!-- ===what's up === -->
		<defName>WhatsUp</defName>
		<label>what's up</label>
		<logRulesInitiator>
			<rulesStrings>
				<!-- ===Bad opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion&lt;0)->...</li>
				<!-- ===Good opinion of recipient=== -->
					<li>r_logentry(INITIATOR_opinion>=0)->[good_opinion]</li>
				<!-- ===DeadMansApparel=== -->
					<li>good_opinion(INITIATOR_thoughtDefName==DeadMansApparel,priority=1)->[deadmans_apparel]</li>
					<li>deadmans_apparel(INITIATOR_trait==bloodlust,priority=1)->I am wearing apparel that someone died in — and that's perfectly fine by me.</li>
					<li>deadmans_apparel->I am wearing apparel that someone died in. It creeps me out and feels dirty!</li>
				<!-- ===Optimist or Sanguine=== -->
					<li>good_opinion(INITIATOR_thoughtDefName==MoodOffsetSanguine,priority=1)->[sanguine_optimist]</li>
					<li>good_opinion(INITIATOR_thoughtDefName==MoodOffsetOptimist,priority=1)->[sanguine_optimist]</li>
						<li>sanguine_optimist(INITIATOR_mood>=0.4)->Everything's just fine — and I'm certain it'll get even better!</li>
						<li>sanguine_optimist(INITIATOR_mood&lt;0.4)->Despite my recent troubles, I'm sure things will quickly improve!</li>
				<!-- ===Pessimist or Depressive=== -->
					<li>good_opinion(INITIATOR_thoughtDefName==MoodOffsetPessimist,priority=1)->[depressive_pessimist]</li>
					<li>good_opinion(INITIATOR_thoughtDefName==MoodOffsetDepressive,priority=1)->[depressive_pessimist]</li>
						<li>depressive_pessimist(INITIATOR_mood>=0.4)->I've recently had some happy moments — but I'm sure it's just a fleeting illusion...</li>
						<li>depressive_pessimist(INITIATOR_mood>=0.4)->I'm... good...</li>
						<li>depressive_pessimist(INITIATOR_mood&lt;0.4)->Just when I believe life can't get worse, it promptly proves me wrong!</li>
						<li>depressive_pessimist(INITIATOR_mood&lt;0.4)->Nothing...</li>
				<!-- ===Tortured artist=== -->
					<li>good_opinion(INITIATOR_thoughtDefName==MoodOffsetTorturedArtist,priority=1)->[tortured_artist]</li>
						<li>tortured_artist(INITIATOR_mood>=0.4)->I almost had it... almost... then suddenly my artistic vision faded... lost...</li>
						<li>tortured_artist(INITIATOR_mood&lt;0.4)->I'm in pain — a [pain_adj] pain you shall never be able to feel the way I do.</li>
				<!-- ===GotSomeLovin === -->
					<li>good_opinion(INITIATOR_thoughtDefName==GotSomeLovin,priority=1)->[gotsomelovin]</li>
					<li>gotsomelovin->Well, [RECIPIENT_nameDef]... Let's say that not being single has its advantages... *wink*</li>
					<li>gotsomelovin(INITIATOR_opinion>=50)->There's nothing like a good tumble between the sheets to lift the mood, my dear [RECIPIENT_nameDef]!</li>
				<!-- ===ReleasedHealthyPrisoner === -->
					<li>good_opinion(INITIATOR_thoughtDefName==ReleasedHealthyPrisoner,priority=1)->[released_prisoner]</li>
					<li>released_prisoner(INITIATOR_faction==PlayerColony)->We released a [prisoner] — [comment]</li>
					<li>released_prisoner(INITIATOR_faction==PlayerTribe)->We released a [prisoner] — [comment]</li>
					<li>released_prisoner(INITIATOR_faction!=PlayerColony,INITIATOR_faction!=PlayerTribe)->They released a [prisoner] — [comment]</li>
						<li>comment->I think it was the right thing to do.</li>
						<li>comment(INITIATOR_trait==kind,priority=2)->poor thing! It was the best thing to do.</li>
						<li>comment(INITIATOR_trait==cannibal,priority=1)->what a waste of resources!</li>
						<li>comment(INITIATOR_trait==bloodlust,priority=1)->what a waste of resources!</li>
				<!-- ===ThoughtWorker_RoyalTitleApparelMinQualityNotMet === -->
					<li>good_opinion(INITIATOR_thoughtDefName==ThoughtWorker_RoyalTitleApparelMinQualityNotMet,priority=1)->[INITIATOR_royalTitle0Indef] like me should wear higher quality apparel!</li>
				<!-- ===ThoughtWorker_RoyalTitleApparelRequirementNotMet === -->
					<li>good_opinion(INITIATOR_thoughtDefName==ThoughtWorker_RoyalTitleApparelRequirementNotMet,priority=1)->Every [INITIATOR_royalTitle0] in [INITIATOR_bestRoyalTitleFaction] wears a specific traditional outfit — I should try to get mine too.</li>
					<li>good_opinion->[INITIATOR_thoughtText]</li>
				<!-- ===WILDCARDS=== -->
					<li>pain_adj->spiritual, higher</li>
					<li>pain_adj->heinous, abyssal</li>
					<li>pain_adj->quantic, cosmic</li>
					<li>pain_adj->sculpted, bleeding</li>
					<li>pain_adj->deafening, silent</li>
					<li>pain_adj->tangible, solid</li>
					<li>pain_adj->blinding, searing</li>
					<li>prisoner->prisoner</li>
					<li>prisoner->captive</li>
			</rulesStrings>
		</logRulesInitiator>
	</InteractionDef>

</Defs>